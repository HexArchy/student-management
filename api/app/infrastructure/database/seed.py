import asyncio
import random
from sqlalchemy.ext.asyncio import AsyncSession
from ...configs.settings import settings
from ..database.database import AsyncSessionLocal
from ..database.models import StudentModel

first_names = [
    "Александр",
    "Алексей",
    "Анастасия",
    "Андрей",
    "Анна",
    "Антон",
    "Артем",
    "Валентина",
    "Валерий",
    "Василий",
    "Виктор",
    "Виталий",
    "Владимир",
    "Владислав",
    "Вячеслав",
    "Галина",
    "Георгий",
    "Даниил",
    "Дарья",
    "Денис",
    "Дмитрий",
    "Евгений",
    "Екатерина",
    "Елена",
    "Елизавета",
    "Иван",
    "Игорь",
    "Ирина",
    "Кирилл",
    "Константин",
    "Ксения",
    "Максим",
    "Мария",
    "Михаил",
    "Наталья",
    "Никита",
    "Николай",
    "Ольга",
    "Павел",
    "Роман",
    "Светлана",
    "Сергей",
    "Татьяна",
    "Тимофей",
    "Юлия",
]
last_names = [
    "Иванов",
    "Петров",
    "Сидоров",
    "Смирнов",
    "Кузнецов",
    "Попов",
    "Васильев",
    "Соколов",
    "Михайлов",
    "Новиков",
    "Федоров",
    "Морозов",
    "Волков",
    "Алексеев",
    "Лебедев",
    "Семенов",
    "Егоров",
    "Павлов",
    "Козлов",
    "Степанов",
    "Николаев",
    "Орлов",
    "Андреев",
    "Макаров",
    "Захаров",
    "Кузьмин",
    "Соловьев",
    "Борисов",
    "Яковлев",
    "Григорьев",
    "Романов",
    "Воробьев",
    "Сергеев",
    "Кудрявцев",
    "Беляев",
    "Королев",
    "Комаров",
    "Трофимов",
    "Давыдов",
    "Белов",
]
middle_names = [
    "Александрович",
    "Алексеевич",
    "Анатольевич",
    "Андреевич",
    "Антонович",
    "Артемович",
    "Валентинович",
    "Валериевич",
    "Васильевич",
    "Викторович",
    "Витальевич",
    "Владимирович",
    "Владиславович",
    "Вячеславович",
    "Геннадьевич",
    "Георгиевич",
    "Даниилович",
    "Дмитриевич",
    "Евгеньевич",
    "Иванович",
    "Игоревич",
    "Кириллович",
    "Константинович",
    "Максимович",
    "Михайлович",
    "Николаевич",
    "Павлович",
    "Романович",
    "Сергеевич",
    "Юрьевич",
]
faculties = [
    "Информатика",
    "Математика",
    "Физика",
    "Химия",
    "Биология",
    "История",
    "Филология",
    "Экономика",
    "Право",
    "Иностранные языки",
]
groups = [
    "A123",
    "B456",
    "C789",
    "D012",
    "E345",
    "F678",
    "G901",
    "H234",
    "I567",
    "J890",
]


async def seed_data(num_students=100):
    async with AsyncSessionLocal() as session:
        students = []
        for _ in range(num_students):
            student = StudentModel(
                last_name=random.choice(last_names),
                first_name=random.choice(first_names),
                middle_name=random.choice(middle_names),
                course=random.randint(1, 6),  # Courses from 1 to 6
                group=random.choice(groups),
                faculty=random.choice(faculties),
            )
            students.append(student)

        session.add_all(students)
        await session.commit()


async def main():
    await seed_data()


if __name__ == "__main__":
    asyncio.run(main())
